{"ast":null,"code":"import _classCallCheck from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createClass from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{logoutUser}from'../../actions/authActions';import{getValidUsers,updateUsers}from'../../actions/adminActions';import{Table,Button,Checkbox}from'react-materialize';import Typography from'@material-ui/core/Typography';import{typo}from'../Contants/constants/typo';import Navbar from'./NavBar';var ValidateUsers=/*#__PURE__*/function(_Component){_inherits(ValidateUsers,_Component);_createClass(ValidateUsers,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getValidUsers();}}]);function ValidateUsers(props){var _this;_classCallCheck(this,ValidateUsers);_this=_possibleConstructorReturn(this,_getPrototypeOf(ValidateUsers).call(this,props));_this.updateUser=function(e){e.preventDefault();var validateUser={id:_this.state.item,userId:_this.props.auth.user._id};_this.props.updateUsers(validateUser.id,validateUser.userId);window.location.reload();};_this.state={user:'',item:'',checkedItems:new Map()};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(ValidateUsers,[{key:\"handleChange\",value:function handleChange(e){var item=e.target.id;var isChecked=e.target.checked;this.setState(function(prevState){return{checkedItems:prevState.checkedItems.set(item,isChecked),item:item};});}},{key:\"render\",value:function render(){var _this2=this;var validUsers=this.props.validUsers.validUsers;return React.createElement(\"div\",null,React.createElement(Navbar,null),React.createElement(Table,{centered:\"true\",responsible:\"true\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",{\"data-field\":\"role\"},\"Role\"),React.createElement(\"th\",{\"data-field\":\"user\"},\"User\"),React.createElement(\"th\",{\"data-field\":\"email\"},\"email\"),React.createElement(\"th\",{\"data-field\":\"valid\"},\"Validate\"))),validUsers.length>0?validUsers.map(function(user){return React.createElement(\"tbody\",{key:user._id},React.createElement(\"tr\",null,React.createElement(\"td\",null,user.role),React.createElement(\"td\",null,user.username),React.createElement(\"td\",null,user.email),React.createElement(\"td\",null,React.createElement(Checkbox,{style:{margin:'1em'},id:user._id,label:\"\",value:\"Red\",onChange:_this2.handleChange,checked:_this2.state.checkedItems.get(user._id)}),React.createElement(Button,{node:\"a\",small:true,style:{marginRight:'5px',marginBottom:'1.6em'},onClick:_this2.updateUser},\"Validate\"))));}):React.createElement(\"div\",{style:{textAlign:'left'}},React.createElement(Typography,{className:typo.root,variant:\"h6\",gutterBottom:true},\"No users to validate!\"))));}}]);return ValidateUsers;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,places:state.places,clients:state.clients,validUsers:state.validUsers,updateUser:state.updateUser};};export default connect(mapStateToProps,{logoutUser:logoutUser,getValidUsers:getValidUsers,updateUsers:updateUsers})(ValidateUsers,updateUsers);","map":{"version":3,"sources":["/home/fernando/Documentos/MobilityProject/client/src/components/Admin/ValidateUsers.js"],"names":["React","Component","connect","logoutUser","getValidUsers","updateUsers","Table","Button","Checkbox","Typography","typo","Navbar","ValidateUsers","props","updateUser","e","preventDefault","validateUser","id","state","item","userId","auth","user","_id","window","location","reload","checkedItems","Map","handleChange","bind","target","isChecked","checked","setState","prevState","set","validUsers","length","map","role","username","email","margin","get","marginRight","marginBottom","textAlign","root","mapStateToProps","places","clients"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport { getValidUsers, updateUsers } from '../../actions/adminActions';\nimport { Table, Button, Checkbox } from 'react-materialize';\nimport Typography from '@material-ui/core/Typography';\nimport { typo } from '../Contants/constants/typo';\nimport Navbar from './NavBar';\nclass ValidateUsers extends Component {\n  componentDidMount() {\n    this.props.getValidUsers();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      item: '',\n      checkedItems: new Map()\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const item = e.target.id;\n    const isChecked = e.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked),\n      item\n    }));\n  }\n\n  updateUser = e => {\n    e.preventDefault();\n\n    const validateUser = {\n      id: this.state.item,\n      userId: this.props.auth.user._id\n    };\n\n    this.props.updateUsers(validateUser.id, validateUser.userId);\n    window.location.reload();\n  };\n\n  render() {\n    const { validUsers } = this.props.validUsers;\n\n    return (\n      <div>\n        <Navbar />\n        <Table centered='true' responsible='true'>\n          <thead>\n            <tr>\n              <th data-field='role'>Role</th>\n              <th data-field='user'>User</th>\n              <th data-field='email'>email</th>\n              <th data-field='valid'>Validate</th>\n            </tr>\n          </thead>\n          {validUsers.length > 0 ? (\n            validUsers.map(user => (\n              <tbody key={user._id}>\n                <tr>\n                  <td>{user.role}</td>\n                  <td>{user.username}</td>\n                  <td>{user.email}</td>\n                  <td>\n                    <Checkbox\n                      style={{ margin: '1em' }}\n                      id={user._id}\n                      label=''\n                      value='Red'\n                      onChange={this.handleChange}\n                      checked={this.state.checkedItems.get(user._id)}\n                    />\n                    <Button\n                      node='a'\n                      small\n                      style={{\n                        marginRight: '5px',\n                        marginBottom: '1.6em'\n                      }}\n                      onClick={this.updateUser}\n                    >\n                      Validate\n                    </Button>\n                  </td>\n                </tr>\n              </tbody>\n            ))\n          ) : (\n            <div style={{ textAlign: 'left' }}>\n              <Typography className={typo.root} variant='h6' gutterBottom>\n                No users to validate!\n              </Typography>\n            </div>\n          )}\n        </Table>\n      </div>\n    );\n  }\n}\nValidateUsers.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  getValidUsers: PropTypes.func.isRequired,\n  updateUsers: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  places: state.places,\n  clients: state.clients,\n  validUsers: state.validUsers,\n  updateUser: state.updateUser\n});\nexport default connect(mapStateToProps, {\n  logoutUser,\n  getValidUsers,\n  updateUsers\n})(ValidateUsers, updateUsers);\n"]},"metadata":{},"sourceType":"module"}