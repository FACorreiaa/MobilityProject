{"ast":null,"code":"import _objectSpread from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _createClass from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{logoutUser}from'../../actions/authActions';import{getPlaces}from'../../actions/placeActions';import ClientNav from'./ClientNav';import MapContainer from'./MapContainer';import PlacesAutocomplete,{geocodeByAddress,getLatLng}from'react-places-autocomplete';var SearchVehicles=/*#__PURE__*/function(_Component){_inherits(SearchVehicles,_Component);_createClass(SearchVehicles,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getPlaces();}}]);function SearchVehicles(props){var _this;_classCallCheck(this,SearchVehicles);_this=_possibleConstructorReturn(this,_getPrototypeOf(SearchVehicles).call(this,props));_this.handleChange=function(address,lat,lng){_this.setState({address:address});};_this.handleSelect=function(address){_this.setState({address:address});geocodeByAddress(address).then(function(results){return getLatLng(results[0]);}).then(function(latLng){_this.setState({lat:latLng.lat,lng:latLng.lng});}).catch(function(error){return error;});};_this.getCoords=function(){var firstCenter=_this.props.places.places.map(function(place){return{lat:place.center[0],lng:place.center[1]};});var coords=_objectSpread({},firstCenter[0]);return coords;};_this.state={address:'',lat:'',lng:'',value:''};return _this;}_createClass(SearchVehicles,[{key:\"render\",value:function render(){var style={height:'400px',width:'100%'};// center\n/* const firstCenter = this.props.places.places.map(place => {\n      return {\n        lat: place.center[0],\n        lng: place.center[1]\n      };\n    }); */var initialCenter=this.getCoords();//marker\nvar centers=this.props.places.places.map(function(place){return{lat:place.center[0],lng:place.center[1]};});var polygon=this.props.places.places.map(function(place){return place.location.coordinates.map(function(values){return values.map(function(data){return{lat:data[0],lng:data[1]};});});});var paths=polygon[0];//center\nvar lat=this.state.lat;var lng=this.state.lng;var center={};if(this.state.lat!==''&&this.state.lng!==''){center={lat:lat,lng:lng};}return React.createElement(\"div\",null,React.createElement(ClientNav,null),React.createElement(\"div\",{style:{textAlign:'center'}},React.createElement(\"p\",{className:\"flow-text grey-text text-darken-1\"},\"Input the name of the street\")),React.createElement(\"div\",{className:\"container valign-wrapper\"},React.createElement(\"div\",{className:\"row center-align s12\"},React.createElement(\"div\",{className:\"col\"},React.createElement(PlacesAutocomplete,{value:this.state.address,onChange:this.handleChange,onSelect:this.handleSelect},function(_ref){var getInputProps=_ref.getInputProps,suggestions=_ref.suggestions,getSuggestionItemProps=_ref.getSuggestionItemProps,loading=_ref.loading;return React.createElement(\"div\",null,React.createElement(\"input\",getInputProps({placeholder:'Search Places ...',className:'location-search-input'})),React.createElement(\"div\",{className:\"autocomplete-dropdown-container\"},loading&&React.createElement(\"div\",null,\"Loading...\"),suggestions.map(function(suggestion){var className=suggestion.active?'suggestion-item--active':'suggestion-item';// inline style for demonstration purpose\nvar style=suggestion.active?{backgroundColor:'#fafafa',cursor:'pointer'}:{backgroundColor:'#ffffff',cursor:'pointer'};return React.createElement(\"div\",getSuggestionItemProps(suggestion,{className:className,style:style}),React.createElement(\"span\",null,suggestion.description));})));})))),React.createElement(MapContainer,{initialCenter:initialCenter,paths:paths,style:style,center:center,markerPositions:centers}));}}]);return SearchVehicles;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,places:state.places,clients:state.clients};};export default connect(mapStateToProps,{logoutUser:logoutUser,getPlaces:getPlaces})(SearchVehicles);","map":{"version":3,"sources":["/home/fernando/Documentos/MobilityProject/client/src/components/Clients/SearchVehicles.js"],"names":["React","Component","connect","logoutUser","getPlaces","ClientNav","MapContainer","PlacesAutocomplete","geocodeByAddress","getLatLng","SearchVehicles","props","handleChange","address","lat","lng","setState","handleSelect","then","results","latLng","catch","error","getCoords","firstCenter","places","map","place","center","coords","state","value","style","height","width","initialCenter","centers","polygon","location","coordinates","values","data","paths","textAlign","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","suggestion","active","backgroundColor","cursor","description","mapStateToProps","auth","clients"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport { getPlaces } from '../../actions/placeActions';\n\nimport ClientNav from './ClientNav';\nimport MapContainer from './MapContainer';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from 'react-places-autocomplete';\nclass SearchVehicles extends Component {\n  componentDidMount() {\n    this.props.getPlaces();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { address: '', lat: '', lng: '', value: '' };\n  }\n\n  handleChange = (address, lat, lng) => {\n    this.setState({ address });\n  };\n\n  handleSelect = address => {\n    this.setState({ address });\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        this.setState({ lat: latLng.lat, lng: latLng.lng });\n      })\n      .catch(error => error);\n  };\n\n  getCoords = () => {\n    const firstCenter = this.props.places.places.map(place => {\n      return {\n        lat: place.center[0],\n        lng: place.center[1]\n      };\n    });\n    let coords = { ...firstCenter[0] };\n    return coords;\n  };\n\n  render() {\n    const style = {\n      height: '400px',\n      width: '100%'\n    };\n\n    // center\n    /* const firstCenter = this.props.places.places.map(place => {\n      return {\n        lat: place.center[0],\n        lng: place.center[1]\n      };\n    }); */\n\n    const initialCenter = this.getCoords();\n    //marker\n    const centers = this.props.places.places.map(place => {\n      return {\n        lat: place.center[0],\n        lng: place.center[1]\n      };\n    });\n\n    const polygon = this.props.places.places.map(place => {\n      return place.location.coordinates.map(values =>\n        values.map(data => {\n          return { lat: data[0], lng: data[1] };\n        })\n      );\n    });\n\n    const paths = polygon[0];\n\n    //center\n    let lat = this.state.lat;\n    let lng = this.state.lng;\n    let center = {};\n\n    if (this.state.lat !== '' && this.state.lng !== '') {\n      center = { lat, lng };\n    }\n\n    return (\n      <div>\n        <ClientNav />\n        <div style={{ textAlign: 'center' }}>\n          <p className='flow-text grey-text text-darken-1'>\n            Input the name of the street\n          </p>\n        </div>\n        <div className='container valign-wrapper'>\n          <div className='row center-align s12'>\n            <div className='col'>\n              <PlacesAutocomplete\n                value={this.state.address}\n                onChange={this.handleChange}\n                onSelect={this.handleSelect}\n              >\n                {({\n                  getInputProps,\n                  suggestions,\n                  getSuggestionItemProps,\n                  loading\n                }) => (\n                  <div>\n                    <input\n                      {...getInputProps({\n                        placeholder: 'Search Places ...',\n                        className: 'location-search-input'\n                      })}\n                    />\n                    <div className='autocomplete-dropdown-container'>\n                      {loading && <div>Loading...</div>}\n                      {suggestions.map(suggestion => {\n                        const className = suggestion.active\n                          ? 'suggestion-item--active'\n                          : 'suggestion-item';\n                        // inline style for demonstration purpose\n                        const style = suggestion.active\n                          ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                          : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                        return (\n                          <div\n                            {...getSuggestionItemProps(suggestion, {\n                              className,\n                              style\n                            })}\n                          >\n                            <span>{suggestion.description}</span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                )}\n              </PlacesAutocomplete>\n            </div>\n          </div>\n        </div>\n        <MapContainer\n          initialCenter={initialCenter}\n          paths={paths}\n          style={style}\n          center={center}\n          markerPositions={centers}\n        />\n      </div>\n    );\n  }\n}\nSearchVehicles.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  getPlaces: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  places: state.places,\n  clients: state.clients\n});\n\nexport default connect(mapStateToProps, { logoutUser, getPlaces })(\n  SearchVehicles\n);\n"]},"metadata":{},"sourceType":"module"}