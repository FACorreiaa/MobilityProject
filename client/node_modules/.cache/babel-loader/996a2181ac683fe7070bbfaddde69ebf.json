{"ast":null,"code":"import _objectWithoutProperties from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';import{connect}from'react-redux';var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,_ref$userRoles=_ref.userRoles,userRoles=_ref$userRoles===void 0?[]:_ref$userRoles,_ref$roles=_ref.roles,roles=_ref$roles===void 0?[]:_ref$roles,auth=_ref.auth,rest=_objectWithoutProperties(_ref,[\"component\",\"userRoles\",\"roles\",\"auth\"]);// check the route's roles to see if any match a role the user has\nvar hasRole=roles.some(function(role){return userRoles.includes(role);});{console.log('ROLES'+userRoles);}return React.createElement(Route,Object.assign({},rest,{render:function render(props){return auth.isAuthenticated===true&&hasRole?React.createElement(Component,props):React.createElement(Redirect,{to:\"/searchVehicles\"});}}));};var mapStateToProps=function mapStateToProps(state){return{userRoles:state.auth.user.role,auth:state.auth};};export default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/home/fernando/Documentos/MobilityProject/client/src/components/PrivateRoute/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PrivateRoute","Component","component","userRoles","roles","auth","rest","hasRole","some","role","includes","console","log","props","isAuthenticated","mapStateToProps","state","user"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAMf,IALOC,CAAAA,SAKP,MALJC,SAKI,qBAJJC,SAII,CAJJA,SAII,yBAJQ,EAIR,gCAHJC,KAGI,CAHJA,KAGI,qBAHI,EAGJ,YAFJC,IAEI,MAFJA,IAEI,CADDC,IACC,yEACJ;AACA,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,IAAN,CAAW,SAAAC,IAAI,QAAIN,CAAAA,SAAS,CAACO,QAAV,CAAmBD,IAAnB,CAAJ,EAAf,CAAhB,CACA,CACEE,OAAO,CAACC,GAAR,CAAY,QAAUT,SAAtB,EACD,CAED,MACE,qBAAC,KAAD,kBACMG,IADN,EAEE,MAAM,CAAE,gBAAAO,KAAK,QACXR,CAAAA,IAAI,CAACS,eAAL,GAAyB,IAAzB,EAAiCP,OAAjC,CACE,oBAAC,SAAD,CAAeM,KAAf,CADF,CAGE,oBAAC,QAAD,EAAU,EAAE,CAAC,iBAAb,EAJS,EAFf,GADF,CAYD,CAzBD,CA+BA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCb,SAAS,CAAEa,KAAK,CAACX,IAAN,CAAWY,IAAX,CAAgBR,IADK,CAEhCJ,IAAI,CAAEW,KAAK,CAACX,IAFoB,CAAL,EAA7B,CAIA,cAAeN,CAAAA,OAAO,CAACgB,eAAD,CAAP,CAAyBf,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nconst PrivateRoute = ({\n  component: Component,\n  userRoles = [],\n  roles = [],\n  auth,\n  ...rest\n}) => {\n  // check the route's roles to see if any match a role the user has\n  const hasRole = roles.some(role => userRoles.includes(role));\n  {\n    console.log('ROLES' + userRoles);\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth.isAuthenticated === true && hasRole ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='/searchVehicles' />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userRoles: state.auth.user.role,\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}