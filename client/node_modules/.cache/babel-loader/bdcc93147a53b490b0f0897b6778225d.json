{"ast":null,"code":"import _classCallCheck from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createClass from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/fernando/Documentos/MobilityProject/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{logoutUser}from'../../actions/authActions';import{updateNotifications,validUsers}from'../../actions/funcActions';import{Table,Button,Checkbox}from'react-materialize';import Navbar from'./NavBar';var NotifyUsers=/*#__PURE__*/function(_Component){_inherits(NotifyUsers,_Component);_createClass(NotifyUsers,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.validUsers();}}]);function NotifyUsers(props){var _this;_classCallCheck(this,NotifyUsers);_this=_possibleConstructorReturn(this,_getPrototypeOf(NotifyUsers).call(this,props));_this.updateUser=function(e){e.preventDefault();var id=_this.state.item;_this.props.updateNotifications(id);window.location.reload();};_this.state={user:'',item:'',checkedItems:new Map()};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(NotifyUsers,[{key:\"handleChange\",value:function handleChange(e){var item=e.target.id;var isChecked=e.target.checked;this.setState(function(prevState){return{checkedItems:prevState.checkedItems.set(item,isChecked),item:item};});}},{key:\"render\",value:function render(){var _this2=this;var validated=this.props.validated.validated;return React.createElement(\"div\",null,React.createElement(Navbar,null),React.createElement(Table,{centered:\"true\",responsible:\"true\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",{\"data-field\":\"role\"},\"Role\"),React.createElement(\"th\",{\"data-field\":\"user\"},\"User\"),React.createElement(\"th\",{\"data-field\":\"email\"},\"email\"),React.createElement(\"th\",{\"data-field\":\"email\"},\"Parking\"),React.createElement(\"th\",{\"data-field\":\"valid\"},\"Notified\"))),validated.map(function(user){return React.createElement(\"tbody\",{key:user._id},React.createElement(\"tr\",null,React.createElement(\"td\",null,user.role),React.createElement(\"td\",null,user.username),React.createElement(\"td\",null,user.email),React.createElement(\"td\",null,user.validParking?'Valid Parking':'Invalid Parking'),React.createElement(\"td\",null,user.notified?'User Notified':React.createElement(\"div\",null,React.createElement(Checkbox,{style:{margin:'1em'},id:user._id,label:\"\",value:\"Red\",checked:_this2.state.checkedItems.get(user._id),onChange:_this2.handleChange}),React.createElement(Button,{node:\"a\",small:true,style:{marginRight:'5px',marginBottom:'1.6em'},onClick:_this2.updateUser},\"Notify\")))));})));}}]);return NotifyUsers;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,updateUser:state.updateUser,validated:state.validated,users:state.users};};export default connect(mapStateToProps,{logoutUser:logoutUser,validUsers:validUsers,updateNotifications:updateNotifications})(NotifyUsers);","map":{"version":3,"sources":["/home/fernando/Documentos/MobilityProject/client/src/components/Func/NotifyUsers.js"],"names":["React","Component","connect","logoutUser","updateNotifications","validUsers","Table","Button","Checkbox","Navbar","NotifyUsers","props","updateUser","e","preventDefault","id","state","item","window","location","reload","user","checkedItems","Map","handleChange","bind","target","isChecked","checked","setState","prevState","set","validated","map","_id","role","username","email","validParking","notified","margin","get","marginRight","marginBottom","mapStateToProps","auth","users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport { updateNotifications, validUsers } from '../../actions/funcActions';\nimport { Table, Button, Checkbox } from 'react-materialize';\nimport Navbar from './NavBar';\nclass NotifyUsers extends Component {\n  componentDidMount() {\n    this.props.validUsers();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      item: '',\n      checkedItems: new Map()\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const item = e.target.id;\n    const isChecked = e.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked),\n      item\n    }));\n  }\n\n  updateUser = e => {\n    e.preventDefault();\n    const id = this.state.item;\n    this.props.updateNotifications(id);\n    window.location.reload();\n  };\n\n  render() {\n    const { validated } = this.props.validated;\n    return (\n      <div>\n        <Navbar />\n        <Table centered='true' responsible='true'>\n          <thead>\n            <tr>\n              <th data-field='role'>Role</th>\n              <th data-field='user'>User</th>\n              <th data-field='email'>email</th>\n              <th data-field='email'>Parking</th>\n              <th data-field='valid'>Notified</th>\n            </tr>\n          </thead>\n          {validated.map(user => (\n            <tbody key={user._id}>\n              <tr>\n                <td>{user.role}</td>\n                <td>{user.username}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.validParking ? 'Valid Parking' : 'Invalid Parking'}\n                </td>\n                <td>\n                  {user.notified ? (\n                    'User Notified'\n                  ) : (\n                    <div>\n                      <Checkbox\n                        style={{ margin: '1em' }}\n                        id={user._id}\n                        label=''\n                        value='Red'\n                        checked={this.state.checkedItems.get(user._id)}\n                        onChange={this.handleChange}\n                      />\n                      <Button\n                        node='a'\n                        small\n                        style={{\n                          marginRight: '5px',\n                          marginBottom: '1.6em'\n                        }}\n                        onClick={this.updateUser}\n                      >\n                        Notify\n                      </Button>\n                    </div>\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          ))}\n        </Table>\n      </div>\n    );\n  }\n}\nNotifyUsers.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  validUsers: PropTypes.func.isRequired,\n  updateNotifications: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  updateUser: state.updateUser,\n  validated: state.validated,\n  users: state.users\n});\nexport default connect(mapStateToProps, {\n  logoutUser,\n  validUsers,\n  updateNotifications\n})(NotifyUsers);\n"]},"metadata":{},"sourceType":"module"}