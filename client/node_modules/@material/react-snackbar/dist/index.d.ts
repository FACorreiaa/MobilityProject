import React from 'react';
import { MDCSnackbarFoundation } from '@material/snackbar/foundation';
import { MDCSnackbarAdapter } from '@material/snackbar/adapter';
export interface Props {
    message: string;
    className?: string;
    timeoutMs?: number;
    closeOnEscape?: boolean;
    actionText?: string;
    leading?: boolean;
    stacked?: boolean;
    open?: boolean;
    reason?: string;
    onOpening?: () => void;
    onOpen?: () => void;
    onClosing?: (reason: string) => void;
    onClose?: (reason: string) => void;
    onAnnounce?: () => void;
}
declare type State = {
    classes: Set<string>;
};
export declare class Snackbar extends React.Component<Props, State> {
    foundation: MDCSnackbarFoundation;
    static defaultProps: Partial<Props>;
    constructor(props: Props);
    readonly adapter: MDCSnackbarAdapter;
    close(action: string): void;
    getTimeoutMs(): number;
    getCloseOnEscape(): boolean;
    isOpen(): boolean;
    handleKeyDown: (e: React.KeyboardEvent<Element>) => void;
    handleActionClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
    componentDidMount(): void;
    componentDidUpdate(prevProps: Props): void;
    componentWillUnmount(): void;
    readonly classes: string;
    render(): JSX.Element;
}
export {};
